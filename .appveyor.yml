#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}-{branch}

skip_tags: true

# branches to build, in case we want to whitelist or blacklist some
#branches:
#  only:
#    - /jm_.*/

# We'll probably want to filter branches and also have branch-conditional configs,
# at which point, look here: https://www.appveyor.com/docs/branches/

# skip commits with a commit message matching this regex
# note that [skip ci] and [skip appveyor] should work anyway
#skip_commits:
#  message: /\[chore\]/


#---------------------------------#
#    environment configuration    #
#---------------------------------#

image:
- Visual Studio 2017

# scripts that are called at the very beginning, before repo cloning
init:
  - git config --global core.autocrlf true

# Limit the number of revisions in the history and download as .zip file. Technically
# these seem to be mutually exclusive.
shallow_clone: true
clone_depth: 5

nuget:  
  disable_publish_on_pr: true

environment:
  COVERALLS_REPO_TOKEN:
    secure: x5HXnLkYkCzK7mWUW6O8QjNAaYNySKhI2Q20oah9i5mvnTk4U8jLJZnVb9MSxx0a

# scripts that run after cloning repository
install:
  # by default, all script lines are interpreted as batch

matrix:
  fast_finish: true


#---------------------------------#
#       build configuration       #
#---------------------------------#

configuration:
  # This config doesn't build the .NET Standard projects
  - netfx

build:
  parallel: true

  # MSBuild verbosity level
  verbosity: detailed

before_build:
  # Make sure we have the right tools version
  - dotnet --version

  # Restore non-netstandard projects one by one using nuget cli directly
  - nuget restore .\Keen\Keen.csproj -PackagesDirectory .\packages\
  - nuget restore .\Keen.Net\Keen.Net.csproj -PackagesDirectory .\packages\
  - nuget restore .\Keen.NET.Test\Keen.NET.Test.csproj -PackagesDirectory .\packages\
  - nuget restore .\Keen.NET_35\Keen.NET_35.csproj -PackagesDirectory .\packages\
  - nuget restore .\Keen.NET_35.Test\Keen.NET_35.Test.csproj -PackagesDirectory .\packages\

  # Restore netstandard projects one by one using dotnet cli
  - dotnet restore .\Keen.NetStandard\Keen.NetStandard.csproj
  - dotnet restore .\Keen.NetStandard.Test\Keen.NetStandard.Test.csproj

# scripts to run after build
after_build:


#---------------------------------#
#       tests configuration       #
#---------------------------------#

# Install tools needed for Code Coverage, run instrumented tests, and report coverage numbers
test_script:
  - nuget install OpenCover -Version 4.6.519 -OutputDirectory tools
  - nuget install coveralls.net -Version 0.8.0-unstable0013 -PreRelease -OutputDirectory tools
  - .\tools\OpenCover.4.6.519\tools\OpenCover.Console.exe -target:nunit3-console.exe -targetargs:"--noheader .\Keen.NET.Test\bin\Release\Keen.Net.Test.dll .\Keen.NET_35.Test\bin\Release\Keen.NET_35.Test.dll --result=results.xml;format=AppVeyor" -filter:"+[*]* -[*.Test]*" -register:user
  - .\tools\coveralls.net.0.8.0-unstable0013\tools\csmacnz.Coveralls.exe --opencover -i .\results.xml

  # While we're at it, run the netstandard-specific tests. We'll figure out code coverage for these later.
  # This won't likely report to the AppVeyor UI since we aren't specifying the output file/format. We might
  # need to directly use the console runner or wait for a new version of the NUnit 3 Test Adapter to support
  # the same '--result=' option as above.
  #
  # This should cause a build to happen as well.
  - dotnet test -c netstandard .\Keen.NetStandard.Test\Keen.NetStandard.Test.csproj


#---------------------------------#
#         notifications           #
#---------------------------------#

# We should consider adding some notifications, e.g.:

#notifications:

  # Email
#  - provider: Email
#    to:
#      - user1@email.com
#      - user2@email.com
#    subject: 'Build {{status}}'                  # optional
#    message: "{{message}}, {{commitId}}, ..."    # optional
#    on_build_status_changed: true

  # Slack
#  - provider: Slack
#    incoming_webhook: http://incoming-webhook-url

  # ...or using auth token

#  - provider: Slack
#    auth_token:
#      secure: kBl9BlxvRMr9liHmnBs14A==
#    channel: development
#    template: "{message}, {commitId}, ..."
